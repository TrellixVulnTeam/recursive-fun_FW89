import os
from stallion import exceptions
from stallion.client.runtime import ClientRuntime

class LocalTesting(ClientRuntime):
    name = "test"
    secure = False

    def __init__(
            self,
            project_id,
            component_name,
            component_version,
            service_port,
            server_name=None):
        self._project_id = project_id
        self._component_name = component_name
        self._component_version = component_version
        self._service_port = service_port
        self._server_name = server_name or 'localhost'

    @classmethod
    def load_from_environment(cls):
        if not os.getenv('__TESTING__') and not os.getenv('__UNIT_TESTING__'):
            raise exceptions.InvalidRuntime(
                'Testing runtime is not enabled.  Must set the '
                '__TESTING__ or __UNIT_TESTING__ environment variable.')

        service_port_str = os.getenv('SERVICE_PORT', '8080')
        try:
            service_port = int(service_port_str)
        except ValueError:
            raise Exception(
                'Invalid value {} for SERVICE_PORT environment variable: '
                'must be an integer!'.format(
                    service_port_str))

        return cls(
                project_id=os.getenv('GOOGLE_CLOUD_PROJECT'),
                component_name=os.getenv('SERVICE_NAME'),
                component_version=os.getenv('SERVICE_VERSION'),
                service_port=service_port,
                server_name=os.getenv('SERVER_NAME'))

    @property
    def project_id(self):
        return self._project_id

    @property
    def component_name(self):
        return self._component_name

    @property
    def component_version(self):
        return self._component_version

    @property
    def service_port(self):
        return self._service_port

    @property
    def server_name(self):
        return 'localhost'
