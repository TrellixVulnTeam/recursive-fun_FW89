from .base import StrictSchema
import marshmallow as ma

class ConfigBackendSchema(ma.Schema):
    backend_type = ma.fields.String(required=True)
    properties = ma.fields.Dict()

    @ma.validates_schema
    def check_type(self, data):
        from stallion.config.backend import SUPPORTED_BACKENDS
        if 'backend_type' not in data:
            return

        backend_cls = SUPPORTED_BACKENDS.get(data['backend_type'])
        if not backend_cls:
            raise ma.ValidationError(
                'Unsupported config backend `{}`'.format(data['backend_type']),
                ['backend_type'])

        try:
            backend_cls.validate_properties(data.get('properties', {}))
        except Exception as e:
            raise ma.ValidationError(
                'Error validating properties for backend `{}`: {}'.format(
                    data['backend_type'],
                    e),
                ['properties'])
