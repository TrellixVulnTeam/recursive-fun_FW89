import operator
from stallion.deploy import gae, gce, noop, cloud_function, cloud_run, dataflow, kubernetes
from stallion import util

_ALL_DEPLOYERS = [
        gae.AppEngineStandardDeployer,
        gae.AppEngineBaseAppDeployer,
        gae.AppEngineFlexibleDeployer,
        noop.NoOpDeployer,
        gce.ComputeEngineDeployer,
        cloud_function.CloudFunctionDeployer,
        cloud_run.CloudRunDeployer,
        dataflow.DataflowJavaStreamingPipelineDeployer,
        kubernetes.GKEHelmDeployer,
        ]

def deployer_mapping(deployers):
    return util.keyby(
            deployers,
            operator.attrgetter('type'),
            'Building mapping from deployer type to deployer class')

_ALL_DEPLOYERS_TYPE_MAPPING = deployer_mapping(_ALL_DEPLOYERS)

def get_deployer_cls(deployment_type, deployers=None):
    mapping = deployer_mapping(deployers) if deployers else _ALL_DEPLOYERS_TYPE_MAPPING
    deployer_cls = mapping.get(deployment_type)

    if not deployer_cls:
        raise Exception('Invalid Deployer type {}!  Allowed types are {}'.format(
            deployment_type,
            ', '.format(list(mapping.keys()))))

    return deployer_cls

def get_deployer(project_id, deployment_type, deployers=None):
    return get_deployer_cls(deployment_type, deployers)(project_id)
